const mongoose = require('mongoose');
const Achievement = require('./models/Achievement');
const config = require('./config');

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –±–∞–∑–æ–≤–∏—Ö –¥–æ—Å—è–≥–Ω–µ–Ω—å
async function initAchievements() {
    console.log('üèÜ Initializing achievements...');

    try {
        // –ë–∞–∑–æ–≤–∏–π –Ω–∞–±—ñ—Ä –¥–æ—Å—è–≥–Ω–µ–Ω—å
        const achievements = [
            // –°–æ—Ü—ñ–∞–ª—å–Ω—ñ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è
            {
                id: 'first_friend',
                name: '–ü–µ—Ä—à–∏–π –¥—Ä—É–≥',
                description: '–î–æ–¥–∞–π—Ç–µ —Å–≤–æ–≥–æ –ø–µ—Ä—à–æ–≥–æ –¥—Ä—É–≥–∞',
                icon: '/images/achievements/first_friend.svg',
                color: '#4CAF50',
                category: 'social',
                tier: 1,
                criteria: 'user.friends.length > 0',
                xpReward: 10,
                displayOrder: 10
            },
            {
                id: 'social_butterfly',
                name: '–°–æ—Ü—ñ–∞–ª—å–Ω–∏–π –º–µ—Ç–µ–ª–∏–∫',
                description: '–î–æ–¥–∞–π—Ç–µ 10 –¥—Ä—É–∑—ñ–≤',
                icon: '/images/achievements/social_butterfly.svg',
                color: '#4CAF50',
                category: 'social',
                tier: 2,
                criteria: 'user.friends.length >= 10',
                xpReward: 30,
                displayOrder: 20
            },
            {
                id: 'friend_groups',
                name: '–û—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä',
                description: '–°—Ç–≤–æ—Ä—ñ—Ç—å 3 –≥—Ä—É–ø–∏ –¥—Ä—É–∑—ñ–≤',
                icon: '/images/achievements/friend_groups.svg',
                color: '#4CAF50',
                category: 'social',
                tier: 2,
                criteria: 'user.friendGroups.length >= 3',
                xpReward: 25,
                displayOrder: 30
            },

            // –î–æ—Å—è–≥–Ω–µ–Ω–Ω—è –ª–æ–∫–∞—Ü—ñ–π
            {
                id: 'explorer',
                name: '–î–æ—Å–ª—ñ–¥–Ω–∏–∫',
                description: '–í—ñ–¥–≤—ñ–¥–∞–π—Ç–µ 5 —Ä—ñ–∑–Ω–∏—Ö –º—ñ—Å—Ü—å',
                icon: '/images/achievements/explorer.svg',
                color: '#FF9800',
                category: 'location',
                tier: 1,
                criteria: 'user.stats.locationsVisited >= 5',
                xpReward: 15,
                displayOrder: 40
            },
            {
                id: 'location_master',
                name: '–ú–∞–π—Å—Ç–µ—Ä –ª–æ–∫–∞—Ü—ñ–π',
                description: '–ü–æ–¥—ñ–ª—ñ—Ç—å—Å—è 10 –ª–æ–∫–∞—Ü—ñ—è–º–∏ –∑ –¥—Ä—É–∑—è–º–∏',
                icon: '/images/achievements/location_master.svg',
                color: '#FF9800',
                category: 'location',
                tier: 3,
                criteria: 'user.stats.locationsShared >= 10',
                xpReward: 40,
                displayOrder: 50
            },

            // –î–æ—Å—è–≥–Ω–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
            {
                id: 'daily_login',
                name: '–©–æ–¥–µ–Ω–Ω–∏–π –≤—ñ–¥–≤—ñ–¥—É–≤–∞—á',
                description: '–ó–∞—Ö–æ–¥—å—Ç–µ –≤ –¥–æ–¥–∞—Ç–æ–∫ 3 –¥–Ω—ñ –ø–æ—Å–ø—ñ–ª—å',
                icon: '/images/achievements/daily_login.svg',
                color: '#2196F3',
                category: 'activity',
                tier: 1,
                criteria: 'user.stats.loginStreak >= 3',
                xpReward: 15,
                displayOrder: 60
            },
            {
                id: 'chatterbox',
                name: '–ë–∞–ª–∞–∫—É–Ω',
                description: '–û–±–º—ñ–Ω—è–π—Ç–µ—Å—è 100 –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º–∏',
                icon: '/images/achievements/chatterbox.svg',
                color: '#2196F3',
                category: 'activity',
                tier: 2,
                criteria: 'user.stats.messagesExchanged >= 100',
                xpReward: 25,
                displayOrder: 70
            },

            // –î–æ—Å—è–≥–Ω–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é
            {
                id: 'complete_profile',
                name: '–ó–∞–ø–æ–≤–Ω–µ–Ω–∏–π –ø—Ä–æ—Ñ—ñ–ª—å',
                description: '–ü–æ–≤–Ω—ñ—Å—Ç—é –∑–∞–ø–æ–≤–Ω—ñ—Ç—å —Å–≤—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å (—ñ–º\'—è, –±—ñ–æ, –∞–≤–∞—Ç–∞—Ä, —ñ–Ω—Ç–µ—Ä–µ—Å–∏)',
                icon: '/images/achievements/complete_profile.svg',
                color: '#9C27B0',
                category: 'profile',
                tier: 1,
                criteria: 'hasFullProfile',
                xpReward: 20,
                displayOrder: 80
            },

            // –ü—Ä–∏—Ö–æ–≤–∞–Ω—ñ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è
            {
                id: 'night_owl',
                name: '–ù—ñ—á–Ω–∞ —Å–æ–≤–∞',
                description: '–ë—É–¥—å—Ç–µ –∞–∫—Ç–∏–≤–Ω—ñ –ø—ñ—Å–ª—è –æ–ø—ñ–≤–Ω–æ—á—ñ',
                icon: '/images/achievements/night_owl.svg',
                color: '#607D8B',
                category: 'special',
                tier: 1,
                criteria: 'isNightTime',
                xpReward: 15,
                displayOrder: 200,
                isHidden: true
            },
            {
                id: 'invisible_man',
                name: '–ù–µ–≤–∏–¥–∏–º–∫–∞',
                description: '–£–≤—ñ–º–∫–Ω—ñ—Ç—å —Ä–µ–∂–∏–º –Ω–µ–≤–∏–¥–∏–º–∫–∏ –Ω–∞ 24 –≥–æ–¥–∏–Ω–∏',
                icon: '/images/achievements/invisible_man.svg',
                color: '#607D8B',
                category: 'special',
                tier: 2,
                criteria: 'user.privacyMode.isInvisible',
                xpReward: 30,
                displayOrder: 210,
                isHidden: true
            }
        ];

        // –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —ñ –¥–æ–¥–∞—Ç–∏ –∫–æ–∂–Ω–µ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è, —è–∫—â–æ –≤–æ–Ω–æ —â–µ –Ω–µ —ñ—Å–Ω—É—î
        for (const achievement of achievements) {
            const existingAchievement = await Achievement.findOne({ id: achievement.id });

            if (!existingAchievement) {
                await Achievement.create(achievement);
                console.log(`‚úÖ Created achievement: ${achievement.name}`);
            } else {
                // –û–Ω–æ–≤–ª—é—î–º–æ —ñ—Å–Ω—É—é—á–µ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è
                Object.assign(existingAchievement, achievement);
                await existingAchievement.save();
                console.log(`üîÑ Updated achievement: ${achievement.name}`);
            }
        }

        console.log('üéâ All achievements initialized successfully!');
    } catch (error) {
        console.error('‚ùå Error initializing achievements:', error);
    }
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–∞–ø—É—Å–∫–∞—î–º–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é, —è–∫—â–æ —Ñ–∞–π–ª –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –±–µ–∑–ø–æ—Å–µ—Ä–µ–¥–Ω—å–æ
if (require.main === module) {
    // –ó'—î–¥–Ω—É—î–º–æ—Å—å –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö
    mongoose.connect(config.dbUrl, config.dbOptions)
        .then(() => {
            console.log('‚úÖ Connected to MongoDB');
            return initAchievements();
        })
        .then(() => {
            console.log('‚úÖ Achievements initialization complete');
            process.exit(0);
        })
        .catch(err => {
            console.error('‚ùå Error:', err);
            process.exit(1);
        });
} else {
    // –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ —ñ–Ω—à–∏—Ö –º–æ–¥—É–ª—è—Ö
    module.exports = initAchievements;
}
